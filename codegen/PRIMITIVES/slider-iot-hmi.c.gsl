.output "$(output_path)$(peripheral.type)-iot-hmi-$(I).cpp"
#include <Homie.h>
#include <Adafruit_ADS1015.h>
AsyncMqttClient& mqttClient = Homie.getMqttClient();
//Bounce  debouncer  = Bounce(); 
Adafruit_ADS1015 ads1015;
const int PIN_BUTTON = 14;

void loopHandler() {
    int16_t adc0, adc1, adc2, adc3;
    adc0 = ads1015.readADC_SingleEnded(0);
    adc1 = ads1015.readADC_SingleEnded(1);
    adc2 = ads1015.readADC_SingleEnded(2);
    adc3 = ads1015.readADC_SingleEnded(3);
. for peripheral.output
    mqttClient.publish("$(output.destination:)", 1, true, adc0);
    mqttClient.publish("$(output.destination:)", 1, true, adc1);
    mqttClient.publish("$(output.destination:)", 1, true, adc2);
    mqttClient.publish("$(output.destination:)", 1, true, adc3);
. endfor
    Serial.print("AIN0: "); Serial.println(adc0);
    Serial.print("AIN1: "); Serial.println(adc1);
    Serial.print("AIN2: "); Serial.println(adc2);
    Serial.print("AIN3: "); Serial.println(adc3);
    delay(1000);
}

void setup() {
  Serial.begin(115200);
  Homie.setResetTrigger(16, LOW, 2000); // reset pin, use before Homie.setup()
  //pinMode(PIN_BUTTON, INPUT_PULLUP);
  //digitalRead(PIN_BUTTON, HIGH);

  //String a = "foo";//Homie.getConfiguration().deviceId;
  //String b = String(Homie.getConfiguration().name);
  //uses macro expansion
  // debouncer.attach( PIN_BUTTON );
  // debouncer.interval(30);
  ads1015.begin();
  Homie_setFirmware("bare-minimum", "1.0.0"); // The "_" is not a typo! See Magic bytes
  Homie.setLoopFunction(loopHandler);
  Homie.setup();
}

void loop() {
  Homie.loop();
}


