.output "$(output_path)$(peripheral.type)-term-curt-$(I).py"

#!/usr/bin/python3
import paho.mqtt.client as mosquitto 
import sys
import time
from curtsies import Input, FullscreenWindow, FSArray
from curtsies.fmtfuncs import red, bold, green, on_blue, yellow

import consul
import zerorpc

def lookup(service):
    c = consul.Consul()
    services = {k:v for (k,v) in c.agent.services().items() if k.startswith("_nomad")}
    for k in services.keys():
        if services[k]['Service'] == service:
                service_ip,service_port = services[k]['Address'],services[k]['Port']
                return service_ip,service_port
                break
    return None,None

mqtt_ip,mqtt_port = lookup('mqtt')
cli = mosquitto.Client()
cli.connect(mqtt_ip, mqtt_port, 60)
cli.loop_start()

print("Keybindings:")
. for peripheral.output
print(" to $(output.destination:)")
. endfor
print("Press ESC or Ctrl-d to exit")
print("")
print("waiting for input...")
position = 0
def render_slider(position):
    start = 0
    end = 127
    slider_str =  "({})".format(start)
    for r in range(start,end+1):
        if r == position:
            slider_str+="|"
        else:
            slider_str+="_"
    slider_str+="({})".format(end)
    slider_str+=" -> {}".format(position)
    return slider_str 

with FullscreenWindow() as window:
    with Input(keynames='curtsies') as input_generator:
        msg = bold(render_slider(position))
        a = FSArray(window.height, window.width)
        a[0:1, 0:msg.width] = [msg]
        #a[0:1, 0:10] = [msg]
        
        for e in input_generator:
            if e in (u'<ESC>', u'<Ctrl-d>'):
                break
            elif e in (u'<LEFT>'):
                if position-1 >= 0:
                    position-=1
. for peripheral.output
                    cli.publish('$(output.destination:)',position)
. endfor
            elif e in (u'<RIGHT>'):
                if position+1 <= 127:
                    position+=1
. for peripheral.output
                    cli.publish('$(output.destination:)',position)
. endfor
            else:
                pass
            msg = bold(render_slider(position))
            a[0:1, 0:msg.width] = [msg]
            window.render_to_terminal(a)
