.- This Source Code Form is subject to the terms of the Mozilla Public
.- License, v. 2.0. If a copy of the MPL was not distributed with this
.- file, You can obtain one at http://mozilla.org/MPL/2.0/.
.- 
.- Copyright (c) 2017, Galen Curwen-McAdams

. if switches.arg1 ?<> ""
. define output_path = switches.arg1
. else
. define output_path = "./env/"
. endif

. if switches.arg2 ?<> ""
. define template_dir = switches.arg2
. else
. define template_dir = "./ENVS"
. endif
. echo output_path

.- Problem: key:value arguments
.- This will not work for more than a few args since
.- the name and pattern must be explicitly defined
.- and the defined variable must be different from
.- the variable in scope (ie interface_arg instead of
.- interface).

.define I = 0
.while I < 10
. if switches.arg$(I) ?<> ""
. if string.prefixed(switches.arg$(I),"interface:")
. define interface_arg = string.search_replace(switches.arg$(I),"interface:","")
. endif
. else
. endif
.I += 1
.endwhile


. dir = directory.create(output_path) ?
.- echo file.copy('env_machine.bork',output_path+'env_machine.bork')

. dir = directory.open (template_dir)
. for dir.file as f

. echo f.name
. echo "$(output_path)env_os_debian.bork"
. gsl from template_dir+"/"+"$(f.name)"
.- some sort of xml file per os?
.- if regexp.match("_os_",f.name)
.- gsl from "foo.gsl"
.-endif
. endfor

.for machine.environment as environment
.for environment.script as script
. echo script.name
. output "$(output_path)$(script.name)"
.- Problem: unscalable keyword agument substition follows:
. if interface_arg ?<> ""
. script.interface = interface_arg
. endif
.- Problem: leading spaces from xml formatting are not trimmed
. gsl script
. endfor
. endfor